<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:xl="clr-namespace:ControlsXL"
                    xmlns:style="clr-namespace:StylesXL;assembly=StylesXL">

    <Style TargetType="{x:Type xl:MarkerButton}">

        <Setter Property="Background" Value="{DynamicResource {ComponentResourceKey style:Styles, ControlBrush}}"/>
        <Setter Property="Foreground" Value="{DynamicResource {ComponentResourceKey style:Styles, TextBrush}}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource {ComponentResourceKey style:Styles, BorderBrush}}"/>
        <Setter Property="BorderThickness" Value="{DynamicResource {ComponentResourceKey style:Styles, BorderThickness}}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Template">
            <Setter.Value>
                
                <ControlTemplate TargetType="{x:Type xl:MarkerButton}">

                    <!-- CORNERRADIUS MASK -->
                    <Grid>
                        <Grid.OpacityMask>
                            <VisualBrush Visual="{Binding ElementName=ControlBorder}"/>
                        </Grid.OpacityMask>
                        
                        <!-- MARKER BUTTON BORDER -->
                        <Border x:Name="ControlBorder" 
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="0">

                            <!-- MARKER BUTTON CONTENT -->
                            <DockPanel>

                                <!-- MARKER -->
                                <Border x:Name="Marker"
                                        DockPanel.Dock="{Binding MarkerPlacement, RelativeSource={RelativeSource TemplatedParent}}"
                                        Background="{TemplateBinding BorderBrush}"
                                        Height="{Binding MarkerSize, RelativeSource={RelativeSource TemplatedParent}}"
                                        Width="{Binding MarkerSize, RelativeSource={RelativeSource TemplatedParent}}"
                                        Focusable="False"/>

                                <!-- TEXT -->
                                <TextBlock x:Name="Content"
                                           Focusable="False"            
                                           Height="{TemplateBinding Height}"
                                           Text="{TemplateBinding Content}"
                                           TextTrimming="CharacterEllipsis"
                                           HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                           Margin="4, 0"/>

                            </DockPanel>

                            
                        </Border>
                    </Grid>
                    
                    <ControlTemplate.Triggers>

                        <!-- MARKER DOCK POSITION LEFT -->
                        <Trigger SourceName="Marker" Property="DockPanel.Dock" Value="Left"> 
                            <Setter TargetName="Marker" Property="Height" Value="{Binding Height, RelativeSource={RelativeSource TemplatedParent}}"/>
                        </Trigger>

                        <!-- MARKER DOCK POSITION RIGHT -->
                        <Trigger SourceName="Marker" Property="DockPanel.Dock" Value="Right">
                            <Setter TargetName="Marker" Property="Height" Value="{Binding Height, RelativeSource={RelativeSource TemplatedParent}}"/>
                        </Trigger>

                        <!-- MARKER DOCK POSITION TOP -->
                        <Trigger SourceName="Marker" Property="DockPanel.Dock" Value="Top">
                            <Setter TargetName="Marker" Property="Width" Value="{Binding ElementName=Content, Path=Width}"/>
                        </Trigger>

                        <!-- MARKER DOCK POSITION BOTTOM -->
                        <Trigger SourceName="Marker"  Property="DockPanel.Dock" Value="Bottom">
                            <Setter TargetName="Marker" Property="Width" Value="{Binding ElementName=Content, Path=Width}"/>
                        </Trigger>

                        <!-- IS CHECKED -->
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="Marker" Property="Background" Value="{DynamicResource {ComponentResourceKey style:Styles, ControlSelectedBrush}}"/>
                            <Setter Property="Foreground" Value="{DynamicResource {ComponentResourceKey style:Styles, ControlSelectedBrush}}"/>
                        </Trigger>

                        <!-- MOUSE OVER -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Marker" Property="Background" Value="{DynamicResource {ComponentResourceKey style:Styles, BorderHighlightBrush}}"/>
                            <Setter Property="Background" Value="{DynamicResource {ComponentResourceKey style:Styles, ControlHighlightBrush}}"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource {ComponentResourceKey style:Styles, BorderHighlightBrush}}"/>
                        </Trigger>

                        <!-- MOUSE PRESS -->
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Marker" Property="Background" Value="{DynamicResource {ComponentResourceKey style:Styles, BorderPressedBrush}}"/>
                            <Setter Property="Background" Value="{DynamicResource {ComponentResourceKey style:Styles, ControlPressedBrush}}"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource {ComponentResourceKey style:Styles, BorderPressedBrush}}"/>
                        </Trigger>

                        <!-- DISABLED -->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Marker" Property="Background" Value="{DynamicResource {ComponentResourceKey style:Styles, BorderDisabledBrush}}"/>
                            <Setter Property="Background" Value="{DynamicResource {ComponentResourceKey style:Styles, ControlDisabledBrush}}"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource {ComponentResourceKey style:Styles, BorderDisabledBrush}}"/>
                            <Setter Property="Foreground" Value="{DynamicResource {ComponentResourceKey style:Styles, TextDisabledBrush}}"/>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>